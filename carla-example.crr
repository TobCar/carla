import scala.collection.immutable.Set

process MyProc
{
	step fetch_server_data 
	{
		println("FETCH DATA")
	}

	step fetch_local_data
	passing database_data, local_data 
	{
		val database_data = "database_data should be passed"
		val local_data = "local_data should be passed"
		println("FETCH LOCAL DATA")
	}
	
	run other_proc
	after fetch_local_data
	using (data -> database_data)
	passing (process_output -> some_output)

	/* A block
	comment */
	step process_data 
	after fetch_server_data, fetch_local_data, other_proc
	using local_data, some_output
	passing my_learning
	{
		println("Received this: "+local_data)
		println("Process output: "+some_output)
		
		val my_learning = Set("Set entry #1", "Set entry #2")
	}

	//Short form for after all steps in this system.
	last
	using my_learning
	{
		for( learning <- my_learning ) {
			println("Set contained: "+learning)
		}
	}
}